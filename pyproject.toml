[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "setuptools-scm",
]

[project]
authors = [
    {email = "patrickjamesroddy@gmail.com", name = "Patrick J. Roddy"},
]
classifiers = [
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
dependencies = []
description = ""
dynamic = [
    "version",
]
keywords = []
name = "example"
optional-dependencies = {dev = [
    "build",
    "mypy",
    "pre-commit",
    "ruff",
    "tox",
    "twine",
], docs = [
    "pdoc3",
]}
readme = "README.md"
requires-python = ">=3.9"
urls = {Code = """
    https://github.com/paddyroddy/python-template
    """, Documentation = """
    https://paddyroddy.github.io/python-template
    """, Homepage = """
    https://github.com/paddyroddy/python-template
    """, Issues = """
    https://github.com/paddyroddy/python-template/issues
"""}
license.file = "LICENCE.md"

[tool.coverage]
report = {skip_covered = true, sort = "cover"}
run = {branch = true, parallel = true, source = [
    "example",
]}
paths.source = [
    "src",
    ".tox*/*/lib/python*/site-packages",
]

[tool.mypy]
explicit_package_bases = true
plugins = [
    "numpy.typing.mypy_plugin",
]

[tool.pytest.ini_options]
addopts = """
    --color=yes
    --import-mode=importlib
    --verbose
"""
testpaths = [
    "tests",
]

[tool.ruff]
fix = true
force-exclude = true
ignore = [
    "D203",
    "D212",
    "D407",
]
isort = {known-first-party = [
    "example",
], section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]}
per-file-ignores = {"tests*" = [
    "INP001",
    "S101",
]}
select = [
    "ALL",
]
target-version = "py39"
mccabe.max-complexity = 18
pep8-naming.classmethod-decorators = [
    "classmethod",
]

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/example/_version.py"

[tool.tomlsort]
all = true
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
overrides."project.classifiers".inline_arrays = false
overrides."tool.coverage.paths.source".inline_arrays = false
overrides."tool.ruff.isort.section-order".inline_arrays = false

[tool.tox]
legacy_tox_ini = """
    [gh-actions]
    python =
        3.9: py39
        3.10: py310
        3.11: py311
        3.12: py312

    [gh-actions:env]
    OS =
        ubuntu-latest: linux
        macos-latest: macos
        windows-latest: windows

    [testenv]
    commands =
        pytest --cov --cov-report=lcov
    deps =
        pytest-cov

    [tox]
    env_list = py{39,310,311,312}-{linux,macos,windows}
"""
